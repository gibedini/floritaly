% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nameStand.R
\name{nameStand}
\alias{nameStand}
\title{Standardize scientific names}
\usage{
nameStand(nvec)
}
\arguments{
\item{nvec}{a character vector containing the scientific names of plants of the Italian flora}
}
\value{
a dataframe of class \code{CklStandardNames} with seven columns, as follows:
\enumerate{
\item{\code{myname}: original name in user's list}
\item{\code{closest_match}: the Checklist name with
the least distance from the original name}
\item{\code{full_distance}: the Levenshtein-Damereau distance
between \code{closest_match} and \code{original_name}}
\item{\code{epithet_distance}: the Levenshtein-Damereau distance
between the \code{full canonical form} of the \code{closest_match}
and the \code{full canonical form} of the \code{original_name}}
\item{\code{match_type}: match type, one of
\code{perfect}, \code{full}, \code{simple},
\code{stem}, \code{suboptimal}, \code{species2subspecies},
\code{subspecies2species}, and \code{unmatched} (see above
for an explanation of match types)}
\item{\code{ckl_id}: the unique identifier of the corresponding
accepted name in the Checklist}
\item{\code{accepted_name}: the accepted name corresponding to
\code{closest_match} according to the Checklist}
}
}
\description{
Standardize scientific names against the Checklist of the Italian flora.
The function attempts to find the best matching names against the
\href{https://dryades.units.it/floritaly/index.php}{Checklist of the Italian flora}.
For each item of nvec, a character vector containing the scientific name to
match.
}
\details{
First, the names are parsed by the \code{superparse} function, an
implementation of the rgn_parse that parses each name component; only
the names with cardinality 2 or 3 (specific or subspecific/varietal rank respectively)
are retained. Parsed names are checked against the parsed names of the Checklist.

Then, the function looks for perfect matches,
where a full name (with infraspecific qualifier and authorities) in the parsed list
matches exactly (verbatim) a name in the parsed checklist;

The matched names are then removed from the parsed list and the function looks for
an exact match between the full canonical
form of the remaining names (i.e. epithets and infraspecific qualifier but
no authorities) and the full canonical form of the Checklist.

This process is repeated for the simple canonical form (only epithets, no
infraspecific qualifier, no authorities) and the stem canonical form (only stem
of epithets, no suffix, no infraspecific qualifier, no authorities).

The remaining names are then subjected to a fuzzy match with the Checklist,
based on a stringdist_inner_join (from package fuzzyjoin) with Levenshtein distance
and maximum distance = 1.

The yet unmatched names are then split in two groups based on their cardinality:
an attempt is made to fuzzy-match species to the respective nominal subspecies,
and subspecies to the parent species.

All remaining names are classified as unmatched and no further attempt is made
to standardize them.

At each step, the match type (perfect, full canonical, etc.)
and the Levenshtein distance are recorded for each matched name. When names
are fuzzy-matched, only one among those with the minimum distance from
a Checklist name is selected.

Finally, all subsets originated in the above steps are pieced together row-wise.
}
\examples{
my_names <- c("Crocus etruscus Parl.","Santolina pinnata Viv.")
s <- nameStand(my_names)
}
